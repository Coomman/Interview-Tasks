//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Technostar.DAL {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Queries {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Queries() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Technostar.DAL.Queries", typeof(Queries).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DECLARE @DataID int;
        ///
        ///BEGIN TRANSACTION
        ///   INSERT INTO Records VALUES (@content);
        ///   SELECT @DataID = scope_identity();
        ///   INSERT INTO Logs VALUES (@DataID, GETDATE());
        ///COMMIT
        ///
        ///Select r.Id, r.Content, l.TimeStamp from Records r
        ///INNER JOIN Logs l on (r.Id = l.RecordId)
        ///Where r.Id = @DataID.
        /// </summary>
        internal static string AddRecord {
            get {
                return ResourceManager.GetString("AddRecord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT r.Id, r.Content, l.TimeStamp FROM Records r
        ///INNER JOIN Logs l on (r.Id = l.RecordId)
        ///ORDER BY TimeStamp DESC.
        /// </summary>
        internal static string GetAllRecords {
            get {
                return ResourceManager.GetString("GetAllRecords", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BEGIN TRANSACTION
        ///   UPDATE Records
        ///   SET Content=@newContent WHERE Id=@id
        ///   UPDATE Logs
        ///   SET TimeStamp=GETDATE() WHERE RecordId=@id
        ///COMMIT
        ///
        ///Select r.Id, r.Content, l.TimeStamp from Records r
        ///INNER JOIN Logs l on (r.Id = l.RecordId)
        ///Where r.Id = @id.
        /// </summary>
        internal static string UpdateRecord {
            get {
                return ResourceManager.GetString("UpdateRecord", resourceCulture);
            }
        }
    }
}
